#!/bin/make
# optional LIBCMP_INC defines where the libcmp header files will be placed (default: "./include_cmp")
# optional LIBCMP_OUT defines where the resulting cmp lib will be placed (default: ".")
# both may contain absolute path or path relative to the dir containing this Makefile
# optional OPENSSL_DIR defines absolute or relative path to OpenSSL installation

ifeq ($(OS),Windows_NT)
#   EXE=.exe
    DLL=.dll
    OBJ=.obj
    LIB=bin
else
#   EXE=
    DLL=.so
    OBJ=.o
    LIB=lib
endif

ifeq ($(LIBCMP_OUT),)
     LIBCMP_OUT=.
endif

SYSTEM_INCLUDE_OPENSSL=/usr/include/openssl
ifeq ($(OPENSSL_DIR),)
   ifneq (,$(wildcard $(SYSTEM_INCLUDE_OPENSSL)))
     OPENSSL_DIR=/usr
   else
     OPENSSL_DIR=.
   endif
endif
ifeq ($(shell echo $(OPENSSL_DIR) | grep "^/"),)
# $(OPENSSL_DIR) is relative path
    OPENSSL=$(LIBCMP_OUT)/$(OPENSSL_DIR)
    OPENSSL_LIB=$(OPENSSL)
    OPENSSL_RPATH=$(OPENSSL)
    OPENSSL_RPATH_LIB=$(OPENSSL)
else
# $(OPENSSL_DIR) is absolute path
    OPENSSL=$(OPENSSL_DIR)
    OPENSSL_LIB=$(OPENSSL)/$(LIB)
    OPENSSL_RPATH=$(OPENSSL_DIR)
    OPENSSL_RPATH_LIB=$(OPENSSL_LIB)
endif

OPENSSL_VERSION=$(shell fgrep OPENSSL_VERSION_NUMBER $(OPENSSL_DIR)/include/openssl/opensslv.h | sed -r 's/.*?NUMBER\s+//; s/L.*//')
ifeq ($(findstring 0x,$(OPENSSL_VERSION)),)
    OPENSSL_VERSION=100020000
    $(warning cannot determine version of OpenSSL in directory '$(OPENSSL_DIR)', assuming 1.0.2)
else
    $(info detected OpenSSL version $(OPENSSL_VERSION))
endif
ifeq ($(shell test $$(printf "%d" $(OPENSSL_VERSION)) -lt $$(printf "%d" 0x10100000); echo $$?),0)
    $(info enabling compilation quirks for OpenSSL 1.0.2)
    OSSL_VERSION_QUIRKS+=-Wno-discarded-qualifiers -Wno-unused-parameter
endif

LIBCMP_INC ?= $(LIBCMP_OUT)/include_cmp
LIBCMP=$(LIBCMP_OUT)/libcmp$(DLL)
#VERSION=.0

CC=gcc
ifdef NDEBUG
    override CFLAGS += -DNDEBUG=1 -O2
else
    override CFLAGS += -g# # not every compiler(version) supports -Og
endif
override CFLAGS += -fPIC -I$(LIBCMP_INC)
override CFLAGS += -DDEBUG_UNUSED -DPEDANTIC -pedantic -Wall -Wextra -Wswitch -Wsign-compare -Wmissing-prototypes -Wstrict-prototypes -Wshadow -Wformat -Wtype-limits -Wundef $(OSSL_VERSION_QUIRKS)# -Werror # not needed for cmp+crmf: -Wno-long-long -Wno-missing-field-initializers
override CFLAGS += -isystem $(OPENSSL_DIR)/include # use of -isystem is critical for selecting wanted OpenSSL version
LIBCMP_HDRS_INC = -include $(LIBCMP_INC)/openssl/crmf.h # used to force inclusion of standalone version, needed also for cmp_err.c

LDFLAGS += -L$(OPENSSL_LIB) -L$(OPENSSL) -Wl,-rpath=$(OPENSSL_RPATH_LIB) -Wl,-rpath=$(OPENSSL_RPATH)
LDLIBS  += -lcrypto

LIBCMP_HDRS_= crmf.h cmp.h cmperr.h crmferr.h safestack_backport.h
LIBCMP_HDRS = $(patsubst %,include/openssl/%,$(LIBCMP_HDRS_))
CMP_SRCS_ = cmp_asn.c cmp_ctx.c cmp_err.c cmp_http.c cmp_lib.c cmp_msg.c cmp_ses.c cmp_srv.c cmp_vfy.c
CRMF_SRCS_ = crmf_asn.c crmf_err.c crmf_lib.c crmf_pbm.c
LIBCMP_SRCS = $(patsubst %,crypto/crmf/%,$(CRMF_SRCS_)) $(patsubst %,crypto/cmp/%,$(CMP_SRCS_))

.phony: build clean

build: $(LIBCMP)

$(LIBCMP): $(LIBCMP_HDRS) $(LIBCMP_SRCS)
	@mkdir -p $(LIBCMP_OUT)
	@mkdir -p $(LIBCMP_INC)/openssl
	@cp --preserve=timestamps $(LIBCMP_HDRS) $(LIBCMP_INC)/openssl # maybe need rsync - for some reason, cp -a does not preserve file dates
	@cd $(LIBCMP_INC)/openssl && ((mv crmf.h tmp2.h && /bin/echo -e "#undef CMP_STANDALONE\n#define CMP_STANDALONE\n" >tmp1.h && cat tmp1.h tmp2.h >crmf.h && touch -r tmp2.h crmf.h); rm -f tmp1.h tmp2.h)
	$(CC) $(CFLAGS) $(LIBCMP_HDRS_INC) $(LIBCMP_SRCS) $(LDFLAGS) $(LDLIBS) -shared -o $@
	@# # -Wl,-soname,libcmp$(DLL)$(VERSION)
	@# #ln -sr $(LIBCMP) $(LIBCMP)$(VERSION)

clean:
	rm -f $(LIBCMP_INC)/openssl/* $(LIBCMP)
	@#rm $(LIBCMP)$(VERSION)
	rmdir $(LIBCMP_INC)/openssl $(LIBCMP_INC) 2>/dev/null || true

SYSTEM_LIB=/usr/lib
DEST_LIB=$(DESTDIR)$(prefix)$(SYSTEM_LIB)
DEST_INC=$(DESTDIR)$(prefix)$(SYSTEM_INCLUDE_OPENSSL)
LIBCMP_HDRS_install = $(patsubst %,$(DEST_INC)/%,$(LIBCMP_HDRS_))

.phony: install uninstall install_clean

install: $(LIBCMP)
	mkdir -p $(DEST_LIB)
	install -D $(LIBCMP) $(DEST_LIB)
	mkdir -p $(DEST_INC)
	install -D $(LIBCMP_INC)/openssl/*.h $(DEST_INC)

install_clean:
	rm -f $(DEST_LIB)/libcmp$(DLL) $(LIBCMP_HDRS_install)

uninstall: install_clean

#SRCS=$(shell ls Makefile_cmp include/openssl/{{cmp,crmf}{,err}.h,safestack_backport.h} crypto/{cmp,crmf}/*.{c,h})
#SRCS_TAR=cmpossl_0.1.0.orig.tar.gz
.phony: deb deb_clean
deb:
	@# #tar czf $(SRCS_TAR) $(SRCS)
	@# #rm -f $(LIBCMP) debian/tmp/usr/lib/libcmp.so*
	debuild -uc -us -I* --lintian-opts --profile debian
	rm -r debian/tmp
	@ #rm $(SRCS_TAR)

deb_clean:
	rm ../libcmp*.deb
